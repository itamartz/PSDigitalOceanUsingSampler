#
# Module manifest for module 'PSDigitalOcean'
#
# Generated by: Itamar Tziger
#
# Generated on: 13/07/2025
#

@{

    # Script module or binary module file associated with this manifest.
    RootModule           = 'PSDigitalOcean.psm1'

    # Version number of this module.
    ModuleVersion        = '1.4.0'

    # Supported PSEditions
    # CompatiblePSEditions = @()

    # ID used to uniquely identify this module
    GUID                 = 'f0bbc186-4415-4085-b679-ede20318e7c9'

    # Author of this module
    Author               = 'Itamar Tziger'

    # Company or vendor of this module
    CompanyName          = 'Itamar Tziger'

    # Copyright statement for this module
    Copyright            = '(c) Itamar Tziger. All rights reserved.'

    # Description of the functionality provided by this module
    Description          = 'A comprehensive PowerShell module for managing DigitalOcean resources with enterprise-grade reliability and extensive test coverage (98.95% with 471 tests). Features complete class-based architecture, robust error handling, and full API integration.'

    # Minimum version of the PowerShell engine required by this module
    PowerShellVersion    = '5.0'

    # Name of the PowerShell host required by this module
    # PowerShellHostName = ''

    # Minimum version of the PowerShell host required by this module
    # PowerShellHostVersion = ''

    # Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
    # DotNetFrameworkVersion = ''

    # Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
    # ClrVersion = ''

    # Processor architecture (None, X86, Amd64) required by this module
    # ProcessorArchitecture = ''

    # Modules that must be imported into the global environment prior to importing this module
    RequiredModules      = @()

    # Assemblies that must be loaded prior to importing this module
    # RequiredAssemblies = @()

    # Script files (.ps1) that are run in the caller's environment prior to importing this module.
    # ScriptsToProcess = @()

    # Type files (.ps1xml) to be loaded when importing this module
    # TypesToProcess = @()

    # Format files (.ps1xml) to be loaded when importing this module
    # FormatsToProcess = @()

    # Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
    # NestedModules = @()

    # Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
    FunctionsToExport    = @(
        'Add-DigitalOceanAPIToken',
        'Get-DigitalOceanAccount',
        'Get-DigitalOceanImage',
        'Get-DigitalOceanRegion',
        'Get-DigitalOceanSize',
        'Get-DigitalOceanSSHKey',
        'Get-DigitalOceanVPC',
        'New-DigitalOceanDroplet'
    )

    # Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
    CmdletsToExport      = @()

    # Variables to export from this module
    VariablesToExport    = @()

    # Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
    AliasesToExport      = @()

    # DSC resources to export from this module
    DscResourcesToExport = @()

    # List of all modules packaged with this module
    # ModuleList = @()

    # List of all files packaged with this module
    # FileList = @()

    # Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
    PrivateData          = @{

        PSData = @{

            # Tags applied to this module. These help with module discovery in online galleries.
            Tags         = @('PowerShell', 'DigitalOcean', 'API', 'Cloud', 'Management', 'Automation', 'DevOps', 'Infrastructure')

            # A URL to the license for this module.
            LicenseUri   = 'https://github.com/itamartz/PSDigitalOceanUsingSampler/blob/main/LICENSE'

            # A URL to the main website for this project.
            ProjectUri   = 'https://github.com/itamartz/PSDigitalOceanUsingSampler'

            # A URL to an icon representing this module.
            # IconUri = 'https://github.com/itamartz/PSDigitalOceanUsingSampler/raw/main/icon.png'

            # ReleaseNotes of this module
            ReleaseNotes = @'
## v1.3.0 - Latest Release

### Added
- DigitalOceanVPC PowerShell class with comprehensive property structure
- Enhanced Get-DigitalOceanVPC function to return strongly-typed objects
- Complete class-based architecture across all major DigitalOcean resources
- Comprehensive unit tests for VPC class (27 test cases)

### Changed
- Updated Get-DigitalOceanVPC function to use class-based output instead of PSObject
- Enhanced VPC function documentation with Pascal case property examples
- Improved test coverage and consistency across all VPC-related functionality

### Features
- Complete PowerShell module for DigitalOcean API integration
- Full class-based architecture with Account, Team, Image, Region, Size, SSH Key, VPC, and Droplet objects
- Comprehensive error handling and defensive programming
- 82.55% test coverage with 394 passing tests using Pester v5
- Support for pagination and bulk operations
- Professional documentation and examples

### Functions
- Add-DigitalOceanAPIToken: Securely set your DigitalOcean API token
- Get-DigitalOceanAccount: Retrieve account information with pagination support
- Get-DigitalOceanImage: Retrieve DigitalOcean images with filtering and pagination support
- Get-DigitalOceanRegion: Retrieve available DigitalOcean regions
- Get-DigitalOceanSize: Retrieve available DigitalOcean droplet sizes
- Get-DigitalOceanSSHKey: Retrieve SSH keys from your account
- Get-DigitalOceanVPC: Retrieve Virtual Private Cloud information
- New-DigitalOceanDroplet: Create new DigitalOcean droplets

### Quality
- Enterprise-grade reliability with extensive testing
- CI/CD pipeline with comprehensive build and test automation
- PSScriptAnalyzer compliance
- Modern build system using Sampler framework

## v1.2.0 - Previous Release

### Added
- DigitalOceanDroplet PowerShell class with comprehensive 21-property structure
- New-DigitalOceanDroplet function to create DigitalOcean Droplets
- Enhanced class-based architecture with strongly-typed object returns

### Changed
- Refactored all functions to return strongly-typed class objects instead of PSObjects
- Enhanced SSH key parameter handling with flexible type support
- Improved null response handling across all functions
'@
            # Prerelease string of this module
            Prerelease   = ''

            # Flag to indicate whether the module requires explicit user acceptance for install/update/save
            # RequireLicenseAcceptance = $false

            # External dependent modules of this module
            # ExternalModuleDependencies = @()

        } # End of PSData hashtable

    } # End of PrivateData hashtable

    # HelpInfo URI of this module
    # HelpInfoURI = ''

    # Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
    # DefaultCommandPrefix = ''

}
